"use strict";(self.webpackChunkdunk_docs=self.webpackChunkdunk_docs||[]).push([[830],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(g,i(i({ref:t},s),{},{components:r})):n.createElement(g,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8741:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],u={sidebar_position:3},l="Your first bridge",c={unversionedId:"quick-guide/first-bridge",id:"quick-guide/first-bridge",title:"Your first bridge",description:"Each module has a corresponding bridge, which is an object specifically for interacting with that module.",source:"@site/docs/quick-guide/first-bridge.md",sourceDirName:"quick-guide",slug:"/quick-guide/first-bridge",permalink:"/dunk/docs/quick-guide/first-bridge",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quick-guide/first-bridge.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Your first module",permalink:"/dunk/docs/quick-guide/first-module"},next:{title:"Creating the store",permalink:"/dunk/docs/quick-guide/creating-store"}},s=[{value:"<code>createDunkBridge</code>",id:"createdunkbridge",children:[{value:"Argument 1: The dunk module",id:"argument-1-the-dunk-module",children:[],level:3},{value:"Argument 2: action creators",id:"argument-2-action-creators",children:[],level:3},{value:"Argument 3: selector creators",id:"argument-3-selector-creators",children:[],level:3},{value:"Argument 4: extras",id:"argument-4-extras",children:[],level:3},{value:"Argument 5: children",id:"argument-5-children",children:[],level:3}],level:2}],d={toc:s};function p(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"your-first-bridge"},"Your first bridge"),(0,o.kt)("p",null,"Each module has a corresponding bridge, which is an object specifically for interacting with that module."),(0,o.kt)("p",null,"At a high level, a bridge has a few core elements:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Action creators"),": functions that return actions for the module"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Selector creators"),": functions that return selectors for the module"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Extras"),": an arbitrary object that can dispatch the bridge's actions and use its selectors"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Children"),": the bridge's children (analogous to the module's children)")),(0,o.kt)("p",null,"Let's now write the bridge for the root module."),(0,o.kt)("h2",{id:"createdunkbridge"},(0,o.kt)("inlineCode",{parentName:"h2"},"createDunkBridge")),(0,o.kt)("p",null,"To use a Dunk bridge, we'll use the helper function called ",(0,o.kt)("inlineCode",{parentName:"p"},"createDunkBridge"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const rootBridge = createDunkBridge(\n  // ...\n)\n")),(0,o.kt)("p",null,"This function takes 5 arguments."),(0,o.kt)("h3",{id:"argument-1-the-dunk-module"},"Argument 1: The dunk module"),(0,o.kt)("p",null,"First, pass in the module whose bridge you're creating:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const rootBridge = createDunkBridge(\n  rootModule,\n  // ...\n)\n")),(0,o.kt)("h3",{id:"argument-2-action-creators"},"Argument 2: action creators"),(0,o.kt)("p",null,"Action creators are functions that accept any arguments and return actions that can be handled by the module. Dunk will type check your action creators to make "),(0,o.kt)("p",null,"Often, but not always, your action creators will map 1-to-1 with your reducers, like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export const rootBridge = createDunkBridge(\n  // ...\n  {\n    setCounter: (value: number) => ({\n      type: "setCounter",\n      payload: value,\n    }),\n    reset: () => ({\n      type: "reset",\n    }),\n    increment: () => ({\n      type: "increment",\n    }),\n  },\n  // ...\n)\n')),(0,o.kt)("h3",{id:"argument-3-selector-creators"},"Argument 3: selector creators"),(0,o.kt)("p",null,"A selector is a function that accepts a module's state and returns any arbitrary value."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"createDunkBridge"),"'s 3rd argument is an object whose values are selector creators, i.e., functions that return selectors for the module."),(0,o.kt)("p",null,"Most of your selector creators will likely have no arguments. Also, often, your selector creators will map 1-to-1 with your module's state, like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const rootBridge = createDunkBridge(\n  // ...\n  {\n    counter: () => (state) => state.counter,\n  },\n  // ...\n)\n")),(0,o.kt)("h3",{id:"argument-4-extras"},"Argument 4: extras"),(0,o.kt)("p",null,"Extras is a function that takes in an object with four keys:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dispatch"),": function to dispatch an action"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"select"),": function to get the value returned by a selector"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"actionCreators"),": the action creators object passed as the second argument"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"selectorCreators"),": the selector creators object passed as the third argument")),(0,o.kt)("p",null,"Extras can return anything. It's a good place to define more complex logic, including any asynchronous logic. For example, you can use extras to retrieve data from an API and dispatch it to your store."),(0,o.kt)("p",null,"Let's say we want functionality to pull a new value for our counter from an API, but only if the counter's value is 0. Here's how we can use extras to achieve this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const rootBridge = createDunkBridge(\n  // ...\n  ({ dispatch, select, actionCreators, selectorCreators }) => {\n    return {\n      retrieveCounter: async () => {\n        const currentCounterValue = select(selectorCreators.counter());\n        if (currentCounterValue > 0) {\n          const newValue = await Api.fetchCounterValue();\n          dispatch(actionCreators.setCounter(newValue));\n        }\n      }\n    }\n  }\n  // ...\n)\n")),(0,o.kt)("h3",{id:"argument-5-children"},"Argument 5: children"),(0,o.kt)("p",null,"Finally, you'll need to pass in the bridges of the module's children. Since the module has no children yet, we can just pass in an empty object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const rootBridge = createDunkBridge(\n  // ...,\n  {},\n)\n")))}p.isMDXComponent=!0}}]);