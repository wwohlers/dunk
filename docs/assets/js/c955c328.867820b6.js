"use strict";(self.webpackChunkdunk_docs=self.webpackChunkdunk_docs||[]).push([[741],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return g}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=s(r),g=o,m=p["".concat(u,".").concat(g)]||p[g]||d[g]||i;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4543:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},default:function(){return p}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],c={sidebar_position:4},u="Creating the store",s={unversionedId:"quick-guide/creating-store",id:"quick-guide/creating-store",title:"Creating the store",description:"Now that we have a root module and bridge, it's time to create the store.",source:"@site/docs/quick-guide/creating-store.md",sourceDirName:"quick-guide",slug:"/quick-guide/creating-store",permalink:"/dunk/docs/quick-guide/creating-store",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quick-guide/creating-store.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Your first bridge",permalink:"/dunk/docs/quick-guide/first-bridge"},next:{title:"Adding children",permalink:"/dunk/docs/quick-guide/adding-children"}},l=[{value:"<code>store</code>",id:"store",children:[],level:2},{value:"<code>bridge</code>",id:"bridge",children:[],level:2}],d={toc:l};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"creating-the-store"},"Creating the store"),(0,i.kt)("p",null,"Now that we have a root module and bridge, it's time to create the store. "),(0,i.kt)("p",null,"Dunk exposes an incredibly simple API for creating a store:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export const [store, bridge] = createDunkStore(rootModule, rootBridge);\n")),(0,i.kt)("h2",{id:"store"},(0,i.kt)("inlineCode",{parentName:"h2"},"store")),(0,i.kt)("p",null,"The first value returned by ",(0,i.kt)("inlineCode",{parentName:"p"},"createDunkStore")," is the Redux store. It is exactly that \u2014 no more, no less. You can use it exactly where you would use a store returned by Redux's ",(0,i.kt)("inlineCode",{parentName:"p"},"createStore"),". "),(0,i.kt)("h2",{id:"bridge"},(0,i.kt)("inlineCode",{parentName:"h2"},"bridge")),(0,i.kt)("p",null,"The second value returned by ",(0,i.kt)("inlineCode",{parentName:"p"},"createDunkStore")," is the bridge, which is the object you'll use to create actions and selectors. "),(0,i.kt)("p",null,"The object is organized in a way that mimics the organization of the modules in your store. For now, our store only has a root module, so interacting with the store is this simple:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// dispatch\nstore.dispatch(bridge.actionCreators.increment());\n\n// useSelector\nconst counter = useSelector(bridge.selectorCreators.counter());\n\n// extras\nawait bridge.extras.retrieveCounter();\n\n")))}p.isMDXComponent=!0}}]);